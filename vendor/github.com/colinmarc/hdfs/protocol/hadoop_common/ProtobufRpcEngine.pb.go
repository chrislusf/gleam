// Code generated by protoc-gen-go.
// source: ProtobufRpcEngine.proto
// DO NOT EDIT!

package hadoop_common

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

// *
// This message is the header for the Protobuf Rpc Engine
// when sending a RPC request from  RPC client to the RPC server.
// The actual request (serialized as protobuf) follows this request.
//
// No special header is needed for the Rpc Response for Protobuf Rpc Engine.
// The normal RPC response header (see RpcHeader.proto) are sufficient.
type RequestHeaderProto struct {
	// * Name of the RPC method
	MethodName *string `protobuf:"bytes,1,req,name=methodName" json:"methodName,omitempty"`
	// *
	// RPCs for a particular interface (ie protocol) are done using a
	// IPC connection that is setup using rpcProxy.
	// The rpcProxy's has a declared protocol name that is
	// sent form client to server at connection time.
	//
	// Each Rpc call also sends a protocol name
	// (called declaringClassprotocolName). This name is usually the same
	// as the connection protocol name except in some cases.
	// For example metaProtocols such ProtocolInfoProto which get metainfo
	// about the protocol reuse the connection but need to indicate that
	// the actual protocol is different (i.e. the protocol is
	// ProtocolInfoProto) since they reuse the connection; in this case
	// the declaringClassProtocolName field is set to the ProtocolInfoProto
	DeclaringClassProtocolName *string `protobuf:"bytes,2,req,name=declaringClassProtocolName" json:"declaringClassProtocolName,omitempty"`
	// * protocol version of class declaring the called method
	ClientProtocolVersion *uint64 `protobuf:"varint,3,req,name=clientProtocolVersion" json:"clientProtocolVersion,omitempty"`
	XXX_unrecognized      []byte  `json:"-"`
}

func (m *RequestHeaderProto) Reset()         { *m = RequestHeaderProto{} }
func (m *RequestHeaderProto) String() string { return proto.CompactTextString(m) }
func (*RequestHeaderProto) ProtoMessage()    {}

func (m *RequestHeaderProto) GetMethodName() string {
	if m != nil && m.MethodName != nil {
		return *m.MethodName
	}
	return ""
}

func (m *RequestHeaderProto) GetDeclaringClassProtocolName() string {
	if m != nil && m.DeclaringClassProtocolName != nil {
		return *m.DeclaringClassProtocolName
	}
	return ""
}

func (m *RequestHeaderProto) GetClientProtocolVersion() uint64 {
	if m != nil && m.ClientProtocolVersion != nil {
		return *m.ClientProtocolVersion
	}
	return 0
}

func init() {
}
